version: "3"

silent: true

includes:
    examples:
        taskfile: ./examples/Taskfile.yml
        dir: ./examples

    common_js_test:
        taskfile: ./common_js_test/Taskfile.yml
        dir: ./common_js_test

    simple_rest_signature_provider:
        taskfile: ./examples/simple_rest_signature_provider/Taskfile.yml
        dir: ./examples/simple_rest_signature_provider

    proto:
        taskfile: ./packages/proto/Taskfile.yml
        dir: ./packages/proto

    cryptography:
        taskfile: ./packages/cryptography/Taskfile.yml
        dir: ./packages/cryptography

tasks:
    default:
        deps:
            - build

    docs:
        cmds:
            - ./node_modules/.bin/typedoc
              --excludeInternal
              --excludePrivate
              --excludeProtected
              --out docs
              --validation.invalidLink
              --entryPoints src/index.js src/browser.js src/native.js

    "install:deps":
        run: once
        cmds:
            - pnpm i --dev > /dev/null

    "install:cryptography:local":
        cmds:
            - task: "install:deps"
            - task: "cryptography:build"
            - ./node_modules/.bin/yalc add @hashgraph/cryptography > /dev/null
        status:
            - ./check_yalc_dep.sh @hashgraph/cryptography

    "install:proto:local":
        cmds:
            - task: "install:deps"
            - task: "proto:build"
            - ./node_modules/.bin/yalc add @hashgraph/proto > /dev/null
        status:
            - ./check_yalc_dep.sh @hashgraph/proto

    "build:proto":
        cmds:
            - task: "proto:build"

    install:
        deps:
            - "build:proto"
            - "install:cryptography:local"
            - "install:proto:local"
        cmds:
            - pnpm i > /dev/null

    build:
        cmds:
            - task: install
            - task: update:addressbooks
            - task: format
            - task: lint
            - ./node_modules/.bin/babel src -d lib --out-file-extension .cjs > /dev/null
            - ./node_modules/.bin/yalc publish > /dev/null

    clean:
        deps:
            - "examples:clean"
            - "cryptography:clean"
            - "proto:clean"
            - "simple_rest_signature_provider:clean"
            - "common_js_test:clean"
        cmds:
            - rm -rf node_modules .yalc

    format:
        cmds:
            - ./node_modules/.bin/prettier src "test/unit/*.js" "test/integration/*.js" "*.json" "src/*.js" "scripts/*.js" --write > /dev/null

    lint:
        deps:
            - "lint:types"
            - "lint:dpdm"
            - "lint:format"
            - "lint:js"

    "lint:types":
        cmds:
            - ./node_modules/.bin/tsc

    "lint:dpdm":
        cmds:
            # It's really annoying seeing [X/X] Analyze done. If a circular dep is found remove `2>&1`
            - ./node_modules/.bin/dpdm src/index.js --circular true --tree false --warning false

    "lint:format":
        cmds:
            - ./node_modules/.bin/prettier src "test/unit/*.js" "test/integration/*.js" "*.json" "src/*.js" --check > /dev/null

    "lint:js":
        cmds:
            - ./node_modules/.bin/eslint --fix "src/**/*.js" "test/integration/**/*.js" "test/unit/**/*.js"

    "test:release":
        cmds:
            - task: build
            - task: test:unit
            - task: examples:build
            - task: simple_rest_signature_provider:build
            - task: common_js_test:build

    test:
        deps:
            - "test:unit"
            - "test:integration"

    "test:unit":
        deps:
            - "test:unit:node"
            - "test:unit:browser"

    "test:unit:node":
        cmds:
            - ./node_modules/.bin/mocha --inline-diffs -r @babel/register -r chai/register-expect.js "test/unit/*.js" {{.CLI_ARGS}}

    "test:unit:codecov":
        cmds:
            - ./node_modules/.bin/c8 --reporter=lcov --reporter=text-summary ./node_modules/.bin/mocha --inline-diffs -r @babel/register -r chai/register-expect.js "test/unit/*.js" {{.CLI_ARGS}}
            - ./node_modules/.bin/c8 report
            - ./node_modules/.bin/codecov

    "test:unit:browser":
        cmds:
            - ./scripts/browser_test.sh

    "test:integration":
        deps:
            - "test:integration:node"

    "test:integration:node":
        cmds:
            - ./node_modules/.bin/mocha --exit -r @babel/register -r chai/register-expect.js "test/integration/*.js" {{.CLI_ARGS}}

    "test:integration:codecov":
        cmds:
            - ./node_modules/.bin/c8 --reporter=lcov --reporter=text-summary ./node_modules/.bin/mocha --exit -r @babel/register -r chai/register-expect.js "test/integration/*.js" {{.CLI_ARGS}}
            - ./node_modules/.bin/c8 report
            - ./node_modules/.bin/codecov

    "update:proto":
        deps:
            - "proto:update"
        cmds:
            - ./node_modules/.bin/yalc add @hashgraph/proto
            # Remove proto so on `task build` we fix the link
            - rm -rf ./node_modules/@hashgraph/proto

    "update:addressbooks":
        cmds:
            - node ./scripts/update-address-books.js

    update:
        cmds:
            - task: update:addressbooks
            - task: update:proto
            - task: build

    publish:
        preconditions:
            - "! grep '\".*\": \"\\(link\\|file\\):.*\"' package.json > /dev/null"
        cmds:
            - task: "test:release"
            - pnpm publish {{.CLI_ARGS}}
