syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2022 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.api.proto.java";
option java_multiple_files = true;

import "basic_types.proto";

/**
 * Modifies or creates an hbar/token allowance for a spender <b>relative to the payer account
 * of this transaction</b>.
 *
 * (So if account <tt>0.0.X</tt> pays for this transaction, then at consensus the spender
 * account will have new allowances to spend hbar or tokens from <tt>0.0.X</tt>).
 *
 * If the allowance already exists, the hbar/token amount will be used to adjust the current
 * allowance balance. If this value is negative the approved allowance will be decreased.
 * The adjusted allowance balance cannot exceed the total supply of the token nor can it
 * be negative.
 *
 * If the allowance does not exist, it will be created with the hbar/token amount being used
 * as the allowance balance.
 *
 * <b>IMPORTANT</b>: If an allowance for the spender does not currently exist, this transaction
 * behaves like an allowance approval.
 */
message CryptoAdjustAllowanceTransactionBody {
    /**
     * List of hbar allowances approved by the account owner.
     */
    repeated CryptoAllowance cryptoAllowances = 1;

    /**
     * List of non-fungible token allowances approved by the account owner.
     */
    repeated NftAllowance nftAllowances = 2;

    /**
     * List of fungible token allowances approved by the account owner.
     */
    repeated TokenAllowance tokenAllowances = 3;
}
