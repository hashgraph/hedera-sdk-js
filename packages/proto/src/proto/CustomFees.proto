syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.api.proto.java";
option java_multiple_files = true;

import "BasicTypes.proto";

/* A fraction of the transferred units of a token to assess as a fee. The amount assessed
will never be less than the given minimum_amount, and never greater than the given maximum_amount. 
The denomination is always units of the token to which this fractional fee is attached. */
message FractionalFee {
  Fraction fractional_amount = 1; // The fraction of the transferred units to assess as a fee
  int64 minimum_amount = 2; // The minimum amount to assess
  int64 maximum_amount = 3; // The maximum amount to assess (zero implies no maximum)
}

/* A fixed number of units (hbar or token) to assess as a fee during a CryptoTransfer 
that transfers units of the token to which this fixed fee is attached. */
message FixedFee {
  int64 amount = 1; // The number of units to assess as a fee
  TokenID denominating_token_id = 2; // The denomination of the fee; taken as hbar if left unset and, in a TokenCreate, taken as the id of the newly created token if set to the sentinel value of 0.0.0
}

/* A transfer fee to assess during a CryptoTransfer that transfers units of the token 
to which the fee is attached. A custom fee may be either fixed or fractional, and must specify
a fee collector account to receive the assessed fees. Only positive fees may be assessed. */
message CustomFee {
  oneof fee {
    FixedFee fixed_fee = 1; // Fixed fee to be charged
    FractionalFee fractional_fee = 2; // Fractional fee to be charged
  }
  AccountID fee_collector_account_id = 3; // The account to receive the custom fee
}

/* A custom transfer fee that was assessed during handling of a CryptoTransfer. */
message AssessedCustomFee {
  int64 amount = 1; // The number of units assessed for the fee
  TokenID token_id = 2; // The denomination of the fee; taken as hbar if left unset
  AccountID fee_collector_account_id = 3; // The account to receive the assessed fee
}
