version: "3"

silent: true

tasks:
    default:
        deps:
            - build

    docs:
        cmds:
            - npx typedoc
              --excludeInternal
              --excludePrivate
              --excludeProtected
              --out docs
              --validation.invalidLink
              --entryPoints src/index.js src/browser.js src/native.js

    install:submodules:
        vars:
            scommit_hash: "a9692704da783ef3754b84a23fa1b1aa0654f920" # v0.58.0
        cmds:
            - git submodule update --init --recursive --remote
            - |
                (
                cd src/services &&
                if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
                    git fetch --unshallow
                fi &&
                git checkout {{.scommit_hash}}
                )

    move:protobufs:
        after:
            - "install:submodules"
        desc: "Move protobufs from src/services/hapi/hedera-protobufs/services to src/proto"
        cmds:
            - rm -rf src/proto/services
            - mv src/services/hapi/hedera-protobufs/services src/proto/
            - rm -rf src/proto/streams
            - mv src/services/hapi/hedera-protobufs/streams src/proto/
            - mv src/services/hapi/hedera-protobufs/platform/event/* src/proto/services
            - echo "Protobufs moved successfully!"
            - task "delete:submodule"

    delete:submodule:
        cmds:
            - find src/services -mindepth 1 -delete
            - echo "Submodule contents removed successfully, folder retained."

    install:
        deps:
            - "install:submodules"
        cmds:
            - task "move:protobufs"
            - pnpm i > /dev/null

    build:
        deps:
            - install
        cmds:
            - npx pbjs -r hashgraph -t static-module -w es6 --force-long --no-beautify --no-convert --no-delimited --no-verify -o src/proto.js src/proto/*/**.proto
            - npx pbts -n hashgraph -o src/proto.d.ts src/proto.js
            - perl -pi -e "s#(?<!api\.)proto\.#hashgraph.proto.#g" src/proto.d.ts
            - task: format
            - task: lint
            - npx babel src -d lib
            - npx copyfiles -u 1 src/index.d.ts src/proto.d.ts lib/ > /dev/null
            # This is necessary to correctly run browser tests with an unpublished proto package
            - npx yalc publish > /dev/null

    clean:
        cmds:
            - rm -rf node_modules

    format:
        cmds:
            - npx prettier "*.json" "src/*.js" --write > /dev/null

    lint:
        deps:
            - "lint:types"
            - "lint:format"
            - "lint:js"

    "lint:types":
        cmds:
            - npx tsc

    "lint:format":
        cmds:
            - npx prettier "*.json" "src/*.js" --check > /dev/null

    "lint:js":
        cmds:
            - npx eslint --fix "src/*.js"

    "test:release":
        deps:
            - build

    update:
        dir: src/services
        vars:
            latest_tag:
                sh: git -c versionsort.suffix=-alpha
                    -c versionsort.suffix=-beta
                    -c versionsort.suffix=-rc
                    tag -l --sort=version:refname|tail -1
            proto: "{{.proto | default .latest_tag}}"
        cmds:
            - echo "Protobuf version set to {{.proto}}"
            - git fetch origin
            - git checkout {{.proto}}
            - git show-ref --verify -q refs/heads/{{.proto}} && git pull origin || exit 0
            - task: build
            - echo "Sucessfully updated protobufs to {{.proto}}"

    publish:
        preconditions:
            - "! grep '\".*\": \"\\(link\\|file\\):.*\"' package.json > /dev/null"
        deps:
            - "test:release"
        cmds:
            - pnpm publish {{.CLI_ARGS}}
