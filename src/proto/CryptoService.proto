syntax = "proto3";

package proto;

option java_package = "com.hederahashgraph.service.proto.java";

import "Query.proto";
import "Response.proto";
import "TransactionResponse.proto";
import "Transaction.proto";

/* The request and responses for different crypto services. */
service CryptoService {

    rpc createAccount (Transaction) returns (TransactionResponse); // Creates a new account by submitting the transaction. The grpc server returns the TransactionResponse

    rpc updateAccount (Transaction) returns (TransactionResponse); // Updates an account by submitting the transaction. The grpc server returns the TransactionResponse

    rpc cryptoTransfer (Transaction) returns (TransactionResponse); // Initiates a transfer by submitting the transaction. The grpc server returns the TransactionResponse

    rpc cryptoDelete (Transaction) returns (TransactionResponse); // Deletes and account by submitting the transaction. The grpc server returns the TransactionResponse

    rpc addClaim (Transaction) returns (TransactionResponse); // Adds a claim by submitting the transaction. The grpc server returns the TransactionResponse

    rpc deleteClaim (Transaction) returns (TransactionResponse); // Deletes a claim by submitting the transaction. The grpc server returns the TransactionResponse

    rpc getClaim (Query) returns (Response); // Retrieves the claim for an account by submitting the query.

    rpc getAccountRecords (Query) returns (Response); // Retrieves the record(fetch by AccountID ID) for an account by submitting the query.

    rpc cryptoGetBalance (Query) returns (Response); // Retrieves the balance for an account by submitting the query.

    rpc getAccountInfo (Query) returns (Response); // Retrieves the account information for an account by submitting the query.

    rpc getTransactionReceipts (Query) returns (Response); // Retrieves the transaction receipts for an account by TxId which last for 180sec only for no fee.

    rpc getFastTransactionRecord (Query) returns (Response); // Retrieves the transaction record by TxID which last for 180sec only for no fee.

    rpc getTxRecordByTxID (Query) returns (Response); // Retrieves the transactions record(fetch by Transaction ID) for an account by submitting the query.

    rpc getStakersByAccountID (Query) returns (Response); // Retrieves the stakers for a node by account ID by submitting the query.
}